Leetcode prbolem no 107 -> binary tree level order traversal II
class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
       vector<vector<int>> result;
       if(root==NULL){
           return result;
       } 
queue<TreeNode*> q;
q.push(root);
while(!q.empty()){
    vector<int > ans;
    int size=q.size();
    for(int i=0;i<size;i++){
        TreeNode* frontNode=q.front();
    q.pop();
    ans.push_back(frontNode->val);
    if(frontNode->left)q.push(frontNode->left);

    if(frontNode->right)q.push(frontNode->right);

    }
    result.push_back(ans);
}
// vector<vector<int>>result1;
// for(int i=result.size()-1;i>=0;i--){
//     result1.push_back(result[i]);
// }
reverse(result.begin(),result.end());
return result;
    }
};
